{% extends 'base.html.twig' %}

{% block stylesheets %}

{% endblock %}

{% block body %}

<div class="container">
<div class="title-container">
    <h1>Degustimer</h1>
</div>
</div>

        <div id="task-actually-running" class="{% if (runningTaskSpan is null) %}running-task-bar-up{% endif %}">
            <div class="running-task-name"><p>{% if (runningTaskSpan) %}{{ runningTaskSpan.getTask().getName()[:25] }}{% endif %}</p></div>
            <div class="timer"><p>00:00</p></div>
            <div class="stop-button-container">
                {{ form_start(stopTaskForm) }}
                {{ form_widget(stopTaskForm) }}
                    <input id="stop-button" class="submit-button" type="submit" value="Stop">
                {{ form_end(stopTaskForm) }}
            </div>
        </div>
        </div>
        

    {{ form_start(form, {'attr' : {'id' : 'create-task-form', 'class' : 'task-form'}}) }}
        {{ form_row(form.name, {'label' : false, 'attr' : {'placeholder' : 'Task name', 'class' : 'name-input'}}) }}
        {{ form_widget(form) }}
        <input id="start-button" class="submit-button" type="submit" value="Start">
    {{ form_end(form) }}



<div id="task-list" class="container">
    {% for day, dailySummary in summary %}
    <div class="task-daily-list">
    <div class="task-list-day-container">
        <div class="task-list-element-left"><p>{% if (today == day) %}Today</p></div><div class="task-list-element-right"><p>{{ todaysWorkingTime }}{% else %}{{ day }}{% endif %}</p></div>
        </div>
        {% for taskName, taskSpanTime in dailySummary %}
        <div class="task-list-task-container">
            <div class="task-list-element-left"><p class="task">{{ taskName }}</p></div>  <div class="task-list-element-right"><p class="time">{{ taskSpanTime.format('%h:%I:%S') }}</p></div>
        </div>
        {% endfor %}
    </div>
    {% endfor %}


{% for message in app.flashes('message') %}<div class="notifier"><small>{{ message }}</small></div>{% endfor %}

{% endblock %}



{% block javascripts %}
    <script>

    // Launch Timer
     function setDegustimer (initialTime = null) {
        if(initialTime != null)
        {
            var mySetInterval = setInterval(function() {
                refreshTimer(initialTime);
            }, 1000);
        }
        return mySetInterval;
        }

    // Calculate the actual time on the timer
    function refreshTimer (initialInterval)
    {
        var date1 = Date.now();
        var date2 = new Date(initialInterval);
        var diffTime = Math.abs(date2 - date1);
        var diffTimeInSecond = diffTime/1000;

        timerValue = diffTimeInSecond.toString().toHHMMSS();

        $('.timer p').html(timerValue);

    }

    function downTimerBar ()
    {
        $('#task-actually-running').css({'margin-top' : 0});
    }

    function upTimerBar ()
    {
        $('#task-actually-running').css({'margin-top' : '-50px'});
    }

    function temporaryChangeTitle(titleText)
    {
        $('h1').html(titleText);
        setTimeout(function(){
            $('h1').html('Degustimer');
        },8000);
    }

    // Intialization
    $(document).ready(function(){

        {% if (runningTaskSpan) %}
        var interval = '{{ runningTaskSpan.getFormatedCreatedAt() }}';
        {% else %}
        var interval = null;
        {% endif %}

        refreshTimer(interval);

        var degustInterval = setDegustimer(interval);

        // On click on a button, we stop the timer
        $('.submit-button').click(function(){
            clearInterval(degustInterval);
            upTimerBar();
        });

        // Remove notifications at the end of 8 secondes since initialization
        setTimeout(function(){
            $('.notifier').fadeOut();
        },5000);

        // Ajax for creating a new task
        $("#create-task-form").submit(function(e) {

            e.preventDefault();

            var form = $(this);
            var url = "{{ path('task.create') }}";
            $('h1').html('loading..');

    
            $.ajax({
                type: "POST",
                url: url,
                data: form.serialize(), // serializes the form's elements.
                success: function(data)
                {
                    $('.running-task-name p').html(data.task_name);
                    temporaryChangeTitle(data.message);
                    degustInterval = setDegustimer(data.task_created);
                    downTimerBar();
                }
         });

    
    });

    });

    
    </script>
{% endblock %}
